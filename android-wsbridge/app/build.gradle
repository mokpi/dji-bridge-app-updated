buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.google.com' }
        google()
    }

    dependencies {
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.3.0'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

repositories {
}


android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.dji.wsbridge"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.2.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "BASE_URL", getBaseUrl()
    }
    buildTypes {
        // Only used internally by DJI
        internal {
            initWith buildTypes.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        all {
            buildConfigField "String", "REMOTE_LOGGER_URL", "\"your_url_goes_here.com\""
        }
    }
}

dependencies {
    implementation 'com.amitshekhar.android:android-networking:0.3.0'
    implementation 'org.java-websocket:java-websocket:1.3.3'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.squareup:otto:1.3.8'
    implementation platform('com.google.firebase:firebase-bom:26.0.0')
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    implementation 'com.android.support:support-annotations:25.0.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    internalImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    debugImplementation 'com.github.markzhai:blockcanary-android:1.5.0'
    internalImplementation 'com.github.markzhai:blockcanary-android:1.5.0'
    releaseImplementation 'com.github.markzhai:blockcanary-no-op:1.5.0'
}

/**
 * e.g, ./gradlew -PbaseUrl=yoururl.com assembleDebug
 * @return return the entered value if there is any, if not empty string
 */
def getBaseUrl() {
    def value = project.getProperties().get("baseUrl")
    return value != null ? "\"" + value + "\"" : "\"\""
}
